# Multi-stage Dockerfile for Next.js 15 on Railway
# Optimized for production deployment with standalone output

# Stage 1: Dependencies
FROM node:20-alpine AS deps
WORKDIR /app

# Install dependencies based on package-lock.json
COPY package.json package-lock.json* ./
RUN npm ci

# Stage 2: Builder
FROM node:20-alpine AS builder
WORKDIR /app

# Accept Railway environment variables as build arguments
# Railway automatically passes these as --build-arg flags during docker build
ARG NEXT_PUBLIC_CDN_URL
ARG NEXT_PUBLIC_SITE_URL
ARG NEXT_PUBLIC_SEO_TITLE
ARG NEXT_PUBLIC_SEO_DESCRIPTION
ARG NEXT_PUBLIC_NAME
ARG NEXT_PUBLIC_USERNAME
ARG NEXT_PUBLIC_GREETING
ARG NEXT_PUBLIC_TITLE
ARG NEXT_PUBLIC_SUBTITLE
ARG NEXT_PUBLIC_EMAIL
ARG NEXT_PUBLIC_CONTACT_EMAIL
ARG NEXT_PUBLIC_LOCATION
ARG NEXT_PUBLIC_BIO_INTRO
ARG NEXT_PUBLIC_BIO_EXPERIENCE
ARG NEXT_PUBLIC_BIO_LEADERSHIP
ARG NEXT_PUBLIC_BIO_TAGLINE
ARG NEXT_PUBLIC_BIO_SHORT
ARG NEXT_PUBLIC_BIO_LONG
ARG NEXT_PUBLIC_GITHUB_URL
ARG NEXT_PUBLIC_GITHUB_USERNAME
ARG NEXT_PUBLIC_GITHUB_HANDLE
ARG NEXT_PUBLIC_LINKEDIN_URL
ARG NEXT_PUBLIC_LINKEDIN_USERNAME
ARG NEXT_PUBLIC_LINKEDIN_HANDLE
ARG NEXT_PUBLIC_TWITTER_URL
ARG NEXT_PUBLIC_TWITTER_USERNAME
ARG NEXT_PUBLIC_TWITTER_HANDLE
ARG NEXT_PUBLIC_TWITTER_FOLLOWERS
ARG NEXT_PUBLIC_TELEGRAM_URL
ARG NEXT_PUBLIC_TELEGRAM_USERNAME
ARG NEXT_PUBLIC_YOUTUBE_HANDLE
ARG NEXT_PUBLIC_YOUTUBE_URL
ARG NEXT_PUBLIC_INSTAGRAM_HANDLE
ARG NEXT_PUBLIC_INSTAGRAM_URL
ARG NEXT_PUBLIC_INSTAGRAM_STATS
ARG NEXT_PUBLIC_TIKTOK_HANDLE
ARG NEXT_PUBLIC_TIKTOK_URL
ARG NEXT_PUBLIC_TIKTOK_STATS

# Set as environment variables so Next.js can inline them during build
# This allows getImageUrl() to return CDN URLs that get baked into the production bundle
ENV NEXT_PUBLIC_CDN_URL=$NEXT_PUBLIC_CDN_URL \
    NEXT_PUBLIC_SITE_URL=$NEXT_PUBLIC_SITE_URL \
    NEXT_PUBLIC_SEO_TITLE=$NEXT_PUBLIC_SEO_TITLE \
    NEXT_PUBLIC_SEO_DESCRIPTION=$NEXT_PUBLIC_SEO_DESCRIPTION \
    NEXT_PUBLIC_NAME=$NEXT_PUBLIC_NAME \
    NEXT_PUBLIC_USERNAME=$NEXT_PUBLIC_USERNAME \
    NEXT_PUBLIC_GREETING=$NEXT_PUBLIC_GREETING \
    NEXT_PUBLIC_TITLE=$NEXT_PUBLIC_TITLE \
    NEXT_PUBLIC_SUBTITLE=$NEXT_PUBLIC_SUBTITLE \
    NEXT_PUBLIC_EMAIL=$NEXT_PUBLIC_EMAIL \
    NEXT_PUBLIC_CONTACT_EMAIL=$NEXT_PUBLIC_CONTACT_EMAIL \
    NEXT_PUBLIC_LOCATION=$NEXT_PUBLIC_LOCATION \
    NEXT_PUBLIC_BIO_INTRO=$NEXT_PUBLIC_BIO_INTRO \
    NEXT_PUBLIC_BIO_EXPERIENCE=$NEXT_PUBLIC_BIO_EXPERIENCE \
    NEXT_PUBLIC_BIO_LEADERSHIP=$NEXT_PUBLIC_BIO_LEADERSHIP \
    NEXT_PUBLIC_BIO_TAGLINE=$NEXT_PUBLIC_BIO_TAGLINE \
    NEXT_PUBLIC_BIO_SHORT=$NEXT_PUBLIC_BIO_SHORT \
    NEXT_PUBLIC_BIO_LONG=$NEXT_PUBLIC_BIO_LONG \
    NEXT_PUBLIC_GITHUB_URL=$NEXT_PUBLIC_GITHUB_URL \
    NEXT_PUBLIC_GITHUB_USERNAME=$NEXT_PUBLIC_GITHUB_USERNAME \
    NEXT_PUBLIC_GITHUB_HANDLE=$NEXT_PUBLIC_GITHUB_HANDLE \
    NEXT_PUBLIC_LINKEDIN_URL=$NEXT_PUBLIC_LINKEDIN_URL \
    NEXT_PUBLIC_LINKEDIN_USERNAME=$NEXT_PUBLIC_LINKEDIN_USERNAME \
    NEXT_PUBLIC_LINKEDIN_HANDLE=$NEXT_PUBLIC_LINKEDIN_HANDLE \
    NEXT_PUBLIC_TWITTER_URL=$NEXT_PUBLIC_TWITTER_URL \
    NEXT_PUBLIC_TWITTER_USERNAME=$NEXT_PUBLIC_TWITTER_USERNAME \
    NEXT_PUBLIC_TWITTER_HANDLE=$NEXT_PUBLIC_TWITTER_HANDLE \
    NEXT_PUBLIC_TWITTER_FOLLOWERS=$NEXT_PUBLIC_TWITTER_FOLLOWERS \
    NEXT_PUBLIC_TELEGRAM_URL=$NEXT_PUBLIC_TELEGRAM_URL \
    NEXT_PUBLIC_TELEGRAM_USERNAME=$NEXT_PUBLIC_TELEGRAM_USERNAME \
    NEXT_PUBLIC_YOUTUBE_HANDLE=$NEXT_PUBLIC_YOUTUBE_HANDLE \
    NEXT_PUBLIC_YOUTUBE_URL=$NEXT_PUBLIC_YOUTUBE_URL \
    NEXT_PUBLIC_INSTAGRAM_HANDLE=$NEXT_PUBLIC_INSTAGRAM_HANDLE \
    NEXT_PUBLIC_INSTAGRAM_URL=$NEXT_PUBLIC_INSTAGRAM_URL \
    NEXT_PUBLIC_INSTAGRAM_STATS=$NEXT_PUBLIC_INSTAGRAM_STATS \
    NEXT_PUBLIC_TIKTOK_HANDLE=$NEXT_PUBLIC_TIKTOK_HANDLE \
    NEXT_PUBLIC_TIKTOK_URL=$NEXT_PUBLIC_TIKTOK_URL \
    NEXT_PUBLIC_TIKTOK_STATS=$NEXT_PUBLIC_TIKTOK_STATS

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy application source
COPY . .

# Build Next.js application
# Generates standalone output for optimized production build
ENV NEXT_TELEMETRY_DISABLED=1
RUN npm run build

# Stage 3: Runner (Production)
FROM node:20-alpine AS runner
WORKDIR /app

# Set production environment
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy public assets
COPY --from=builder /app/public ./public

# Set correct permissions for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Copy standalone server and dependencies
# With outputFileTracingRoot set to project root, structure should be flat
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./

# Copy static assets (CRITICAL: Must be from build root, not standalone)
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Copy content-collections generated files (REQUIRED for blog/project pages)
COPY --from=builder --chown=nextjs:nodejs /app/.content-collections/generated ./.content-collections/generated

# Switch to non-root user
USER nextjs

# Railway provides PORT env variable
EXPOSE 3000
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Start the application
CMD ["node", "server.js"]
